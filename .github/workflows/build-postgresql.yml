name: Fineract Gradle build - PostgreSQL
on: [push, pull_request]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-20.04

    services:
        postgresql:
            image: postgres:13.8
            ports:
                - 5432:5432
            env:
              POSTGRES_USER: root
              POSTGRES_PASSWORD: postgres
            options: --health-cmd="pg_isready -q -d postgres -U root" --health-interval=5s --health-timeout=2s --health-retries=3

        mock-oauth2-server:
          image: ghcr.io/navikt/mock-oauth2-server:0.5.1
          ports:
            - 9000:9000
          env:
            SERVER_PORT: 9000
            JSON_CONFIG: '{ "interactiveLogin": true, "httpServer": "NettyWrapper", "tokenCallbacks": [ { "issuerId": "auth/realms/fineract", "tokenExpiry": 120, "requestMappings": [{ "requestParam": "scope", "match": "fineract", "claims": { "sub": "mifos", "scope": [ "test" ] } } ] } ] }'

    env:
        TZ: Asia/Kolkata
    steps:
      - name: Checkout
        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # tag=v3
      - name: Set up JDK 17
        uses: actions/setup-java@2c7a4878f5d120bd643426d54ae1209b29cc01a3 # tag=v3
        with:
          java-version: '17'
          distribution: 'zulu'
          cache: gradle
      - uses: actions/setup-node@2fddd8803e2f5c9604345a0b591c3020ee971a93 # tag=v3
        with:
          node-version: 16
      - name: Congfigure vega-cli
        run: npm i -g vega-cli --unsafe
      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@e6e38bacfdf1a337459f332974bb2327a31aaf4b
      - name: Verify PostgreSQL connection
        run: |
            while ! pg_isready -d postgres -U root -h 127.0.0.1 -p 5432 ; do
                sleep 1
            done
      - name: Initialise databases
        run: |
            ./gradlew --no-daemon -q createPGDB -PdbName=fineract_tenants
            ./gradlew --no-daemon -q createPGDB -PdbName=fineract_default
      - name: Install additional software
        run: |
            sudo apt-get update
            sudo apt-get install ghostscript graphviz -y

      - name: Basic Auth Build & Test
        run: ./gradlew --no-daemon -q --console=plain build test --fail-fast doc -x :twofactor-tests:test -x :oauth2-test:test -PdbType=postgresql

      - name: 2FA Build & Test
        run: ./gradlew --no-daemon -q --console=plain :twofactor-tests:test --fail-fast -PdbType=postgresql

      - name: OAuth2 Build & Test
        run: ./gradlew --no-daemon -q --console=plain :oauth2-tests:test --fail-fast -PdbType=postgresql

      - name: Archive test results
        if: always()
        uses: actions/upload-artifact@3cea5372237819ed00197afe530f5a7ea3e805c8 # tag=v3
        with:
          name: test-results
          path: integration-tests/build/reports/

      - name: Archive server logs
        if: always()
        uses: actions/upload-artifact@3cea5372237819ed00197afe530f5a7ea3e805c8 # tag=v3
        with:
          name: server-logs
          path: integration-tests/build/cargo/
